delta = linspace(0, 10e-3, 1000);
plot(delta, cos(2*pi*2200*delta) - cos(2*pi*1200*delta))


%%
%Program to perform CPFSK
clear all
close all
clc
x=[1 1 1 1 1 0 1 0 1 0 1];
n=length(x);

pulseWidth_Sec = 833e-6;

Fs = 10000; % 10000 Hz de frecuencia de sampleo
Ts = 1/Fs;
f1=1200;
f2=2200;

Xcpfsk=[];
x1=[];
lastPhase = 0;
for z=1:n
    if(x(z)==1)
        x1=[x1,ones(1,100)];
        t1 = linspace(lastPhase/(2*pi*f1), lastPhase/(2*pi*f1) + pulseWidth_Sec, pulseWidth_Sec/Ts);
        % genera puntos espaciados en Ts 
        Xcpfsk=[Xcpfsk, sin(2*pi*f1*t1)];
        lastPhase = 2*pi*f1*(lastPhase/(2*pi*f1) + pulseWidth_Sec + Ts);
    elseif(x(z)==0)
        x1=[x1,zeros(1,100)];
        t2 = linspace(lastPhase/(2*pi*f2), lastPhase/(2*pi*f2) + pulseWidth_Sec, pulseWidth_Sec/Ts);
        % genera puntos espaciados en Ts 
        Xcpfsk=[Xcpfsk, sin(2*pi*f2*t2)];
        lastPhase = 2*pi*f2*(lastPhase/(2*pi*f2) + pulseWidth_Sec + Ts);
    else
        disp('error');
        return
    end
end
pulseWidth_Sec/Ts

subplot 411
plot(x1)
subplot 412
%plot(Xcpfsk, '-o')
plot(Xcpfsk)

realTime = [Xcpfsk, zeros(1, floor(440e-6/Ts))];
retarded = [zeros(1, floor(440e-6/Ts)), Xcpfsk];

product = realTime.*retarded;

subplot 413
plot(product);

Hd = filterFIR1;

a = 1;
b = Hd.Numerator;

filteredOutput = filter(b, a, product);

subplot 414
plot(filteredOutput);

function Hd = filterFIR1
%filterFIR1 Returns a discrete-time filter object.

% MATLAB Code
% Generated by MATLAB(R) 9.4 and DSP System Toolbox 9.6.
% Generated on: 17-Oct-2022 01:34:29

% Equiripple Lowpass filter designed using the FIRPM function.

% All frequency values are in Hz.
Fs = 10000;  % Sampling Frequency

Fpass = 1400;            % Passband Frequency
Fstop = 2400;            % Stopband Frequency
Dpass = 0.057501127785;  % Passband Ripple
Dstop = 0.1;             % Stopband Attenuation
dens  = 20;              % Density Factor

% Calculate the order from the parameters using FIRPMORD.
[N, Fo, Ao, W] = firpmord([Fpass, Fstop]/(Fs/2), [1 0], [Dpass, Dstop]);

% Calculate the coefficients using the FIRPM function.
b  = firpm(N, Fo, Ao, W, {dens});
Hd = dfilt.dffir(b);

% [EOF]

end













